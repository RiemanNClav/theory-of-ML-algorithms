vector = c(sum)
vector = append(vector)
}
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
sum = sum(paises)
vector = c(sum)
vector = append(vector)
}
}
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
}
suma
unique(datos_america_latina[,2])[1]
datos_america_latina[datos_america_latina$Pais_Region == Antigua and Barbuda,6]
datos_america_latina[datos_america_latina$Pais_Region == "Antigua and Barbuda",6]
sum(datos_america_latina[datos_america_latina$Pais_Region == "Antigua and Barbuda",6])
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == "pais",6]
suma = sum(paises)
vector = c(suma)
vector = append(vector)
}
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == "pais",6]
suma = sum(paises)
vector = c(suma)
}
suma = c(4487)
vector
vector
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == "pais",6]
suma = sum(paises)
vector = c(suma)
vector = append(vector)
i = i + 1
}
vector = c(1)
vector
vector = append(vector,1)
vector
print(vector)
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == "pais",6]
suma = sum(paises)
vector = c(suma)
print(vector)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == "pais",6]
suma = sum(paises)
print(suma)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
print(suma)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
vector = c(suma)
vector
i = i + 1
}
vector
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
vector = append(suma)
print(vector)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
i = i + 1
}
suma
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
print(suma)
i = i + 1
}
suma
print(suma)
vector = append(1772,1)
vector
class(vector)
c = c(1,2)
class(c)
c
c = c(1772,1)
c
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
vector = append(suma)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
plot(suma,1:m)
i = i + 1
}
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
print(suma)
i = i + 1
}
print(suma)
i = 1
while (i <= length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
Casos_Confirmados = sum(paises)
list(Casos_Confirmados)
i = i + 1
}
Lista = list()
for(i in 1:10) {
Lista = c(Lista, i)
}
Lista
t<-c()
for (i in 1:10) {
t<-c(t,i)
}
t
Casos_Confirmados = c()
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
Casos_Confirmados = c(Casos_Confirmados,i)
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
Casos_Confirmados = sum(paises)
Casos_Confirmados = c(Casos_Confirmados,i)
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
Casos_Confirmados = c(suma,i)
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in 1:length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
suma = sum(paises)
Casos_Confirmados = c(suma,i)
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in 1:length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
Casos_Confirmados = sum(paises)
Casos_Confirmados = c(Casos_Confirmados,i)
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in 1:length(m)) {
pais = unique(datos_america_latina[,2])[i]
paises = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
Casos_Confirmados = sum(paises)
Casos_Confirmados = c(Casos_Confirmados,Casos_Confirmados)
}
Casos_Confirmados
c = c(1,2)
c[1]
c[2]
Casos_Confirmados = c()
for (i in 1:length(m)) {
pais = unique(datos_america_latina[,2])[i]
pais1 = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
casos = sum(pais1)
Casos_Confirmados[i] = casos
}
Casos_Confirmados
Casos_Confirmados = c()
for (i in 1:length(m)) {
pais = unique(datos_america_latina[,2])[i]
pais1 = datos_america_latina[datos_america_latina$Pais_Region == pais,6]
casos = sum(pais1)
Casos_Confirmados[i] = casos
Casos_Confirmados
}
,
m
m = unique(datos_america_latina[,2])
m
length(m)
plot(Casos_Confirmados)
hist(Casos_Confirmados)
plot(Casos_Confirmados)
library(reticulate)
library(knitr)
library(tidyverse)   # %>%
library(magrittr)    # %<>%
#library(kableExtra)
library(lubridate)
distancia_grados_CDMX = function(x){
cdmx = c(-99.12766,19.42847)
distancia_grados = c(x, cdmx)
}
dist_cdmx = apply(cbind(datos$Latitud, datos$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
dist_cdmx = apply(cbind(datos_america_latina$Latitud, datos_america_latina$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
rlang::last_error()
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
library(tidyverse)   # %>%
library(magrittr)    # %<>%
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(dist_cdmx)
View(dist_cdmx)
dist_cdmx
View(datos_america_latina)
View(datos_europa)
distancia_grados(c(1,2),c(2,3))
View(distancia_grados_CDMX)
distancia_grados = function(x,y){
sqrt((x[1] - y[1])^2 + (x[2] - y[2])^2)
}
distancia_grados((c(1,2),c(2,3)))
distancia_grados(2,3)
distancia_grados(c(1,2))
distancia_grados(2,5)
distancia_grados(c(2,3),c(3,4))
distancia_grados_CDMX = function(x){
cdmx = c(-99.12766,19.42847)
distancia_grados = c(x, cdmx)
}
dist_cdmx = apply(cbind(datos_america_latina$Latitud, datos_america_latina$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
distancia_grados_CDMX(c(2,4))
distancia_grados_CDMX(c(4,5))
distancia_grados_CDMX(c(4,5))
rlang::last_error()
library(reticulate)
library(knitr)
library(tidyverse)   # %>%
library(magrittr)    # %<>%
#library(kableExtra)
library(lubridate)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
dist_cdmx
distancia_grados = function(x,y){
sqrt((x[1] - y[1])^2 + (x[2] - y[2])^2)
}
distancia_grados_CDMX = function(x){
cdmx = c(-99.12766,19.42847)
distancia_grados = c(x, cdmx)
}
distancia_grados_CDMX(c(3,4))
distancia_grados_CDMX = function(x){
cdmx = c(-99.12766,19.42847)
distancia_grados = c(x, cdmx)
return(distancia_grados)
}
distancia_grados_CDMX(c(4,5))
distancia_grados_CDMX(c(5,6))
distancia_grados_CDMX = function(x){
cdmx = c(-99.12766,19.42847)
distancia_grados(x, cdmx)
}
dist_cdmx = apply(cbind(datos_america_latina$Latitud, datos_america_latina$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
?cbind
cbind(datos_america_latina$Latitud, datos_america_latina$Longitud)
View(datos_america_latina)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_america_latina %<>%
filter(between(Fecha, dmy("2-3-2020"), dmy("7-3-2020")), dist_cdmx < 4)
distancia_grados_CDMX = function(x){
cdmx = c(19.42847,-99.12766)
distancia_grados(x, cdmx)
}
#aplicamos apply a la funcion cbind, MARGIN = 1 es por filas, se le aplica la funcion FUN.
dist_cdmx = apply(cbind(datos_america_latina$Latitud, datos_america_latina$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
head(datos_america_latina, 10)
head(datos_america_latina, 10)
datos = read.csv("C:/Users/URIEL/Documents/CURSO RSTUDIO/ANALISIS DE LOS DATOS DEL COVID19/covid_19_clean_complete.csv")
datos_america_latina = datos %>%
filter(between(Latitud,-60,30), between(Longitud,-120,-30 ))
library(tidyverse)   # %>%
library(magrittr)    # %<>%
#library(kableExtra)
library(lubridate)
#library(kableExtra)
library(lubridate)
library(knitr)
library(reticulate)
datos_america_latina = datos %>%
filter(between(Latitud,-60,30), between(Longitud,-120,-30 ))
View(datos)
datos %>% head(10) %>% kable()
str(datos)
#cambio el nombre de las columnas
colnames(datos) = c("Provincia_Estado",
"Pais_Region", "Latitud", "Longitud",
"Fecha", "Casos_Confirmados",
"Casos_Muertos", "Casos_Recuperados")
datos[,9:11] = NULL
datos %>% head() %>% kable()
datos$Provincia_Estado = as.factor(datos$Provincia_Estado)
datos$Pais_Region = as.factor(datos$Pais_Region)
#Como la fecha es un dato que es mas que un factor, pues entre
#fechas si existe un orden hay fechas anteriores a otras, debe
#de ser un dato ordinal.
#primero lo convertimos en factor, para posteriormente
#convertirlo en ordinal,
datos$Fecha = as.factor(datos$Fecha)
str(datos)
ordered(datos$Fecha)
datos$Fecha = as.Date(datos$Fecha)
str(datos)
#agregar columna con tydiverse.
datos %<>%
mutate(Casos_Enfermos = Casos_Confirmados - Casos_Muertos -
Casos_Recuperados)
#para observar esa columna
datos %>% tail() %>% kable()
datos %>% filter(Casos_Confirmados > 10000) %>%
head(10) %>% kable()
datos %>% filter(Casos_Enfermos < 0) %>%
arrange(Provincia_Estado, Fecha) %>% kable()
datos %>% filter(Provincia_Estado == "Hainan") %>% head(10) %>% kable()
datos %>%
filter(Provincia_Estado == "Hainan", Casos_Enfermos < 0) %>%
mutate(Casos_Recuperados = Casos_Recuperados + Casos_Enfermos,
Casos_Enfermos = 0) %>% kable()
datos_america_latina = datos %>%
filter(between(Latitud,-60,30), between(Longitud,-120,-30 ))
distancia_grados = function(x,y){
sqrt((x[1] - y[1])^2 + (x[2] - y[2])^2)
}
distancia_grados_CDMX = function(x){
cdmx = c(19.42847,-99.12766)
distancia_grados(x, cdmx)
}
#aplicamos apply a la funcion cbind, MARGIN = 1 es por filas, se le aplica la funcion FUN.
dist_cdmx = apply(cbind(datos_america_latina$Latitud, datos_america_latina$Longitud),
MARGIN = 1,
FUN = distancia_grados_CDMX)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_america_latina %<>%
filter(between(Fecha, dmy("2-3-2020"), dmy("7-3-2020")), dist_cdmx < 4)
View(datos)
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
View(datos_america_latina)
datos_america_latina = datos %>%
filter(between(Latitud,-60,30), between(Longitud,-120,-30 ))
datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
datos_america_latina %<>%
filter(between(Fecha, dmy("2-3-2020"), dmy("7-3-2020")), dist_cdmx < 50)
View(datos)
View(datos_america_latina)
datos_america_latina = datos %>%
filter(between(Latitud,-60,30), between(Longitud,-120,-30 ))
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_dist_cdmx)
datos_dist_cdmx %<>%
filter(between(Fecha, dmy("2020-12-30"), dmy("2020-12-31")), dist_cdmx < 50)
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
View(datos_america_latina)
datos_dist_cdmx %<>%
filter(between(Fecha, dmy("2020-12-30"), dmy("2020-12-31")), dist_cdmx < 200)
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %<>%
filter(between(Fecha, dmy("2020-09-05"), dmy("2020-09-06")), dist_cdmx < 100)
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %<>%
filter(between(Fecha, dmy("2020-03-05"), dmy("2020-03-06")), dist_cdmx < 100)
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %<>%
filter(between(Fecha, "2020-03-05", "2020-03-06"), dist_cdmx < 100)
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %<>%
filter(dist_cdmx < 100)
datos_dist_cdmx %<>%
filter(dist_cdmx < 100) %>% kable()
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %<>%
filter(dist_cdmx < 100) %>% kable()
datos_dist_cdmx = datos_america_latina %<>%
mutate(dist_cdmx = dist_cdmx)
datos_dist_cdmx %>%
filter(dist_cdmx < 100) %>% kable()
datos_a_100_grados = datos_dist_cdmx %>%
filter(dist_cdmx < 100)
datos_a_100_grados = datos_dist_cdmx %>%
filter(dist_cdmx < 50)
datos_a_100_grados = datos_dist_cdmx %>%
filter(dist_cdmx < 24)
datos_a_24_grados = datos_dist_cdmx %>%
filter(dist_cdmx < 24)
datos %>%
filter(Fecha == dmy("30-03-2020"))  %>%
ggplot(aes(Longitud, Latitud)) +
geom_point()
View(datos)
datos %>%
filter(Fecha == dmy("30-03-2020"))  %>%
ggplot(aes(Longitud, Latitud)) +
geom_point(aes(size = Casos_Confirmados))
datos %>%
filter(Fecha == dmy("30-03-2020"))  %>%
ggplot(aes(Longitud, Latitud)) +
geom_point(aes(size = Casos_Confirmados), colour = Casos_Muertos)
datos %>%
filter(Fecha == dmy("30-03-2020"))  %>%
ggplot(aes(Longitud, Latitud)) +
geom_point(aes(size = Casos_Confirmados), colour = Casos_Muertos))
datos %>%
filter(Fecha == dmy("30-03-2020"))  %>%
ggplot(aes(Longitud, Latitud)) +
geom_point(aes(size = Casos_Confirmados, colour = Casos_Muertos))
View(datos)
library(rnaturalearth)
install.packages("rnaturalearth")
library(rnaturalearth)
setwd()
setwd("C:/Users/URIEL/Documents/CURSO PYTHON/ALGORITMO DE MACHINE LEARNING/Datasets/")
#tratamientos de valores NA
data = read.csv("Data.csv")
#tratamientos de valores NA
data = read.csv("Data.csv")
is.na(data$Age)
data$Age = ifelse(is.na(data$Age),ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)), data$Age )
data
data$Age = ifelse(is.na(data$Age),ave(data$Age, FUN = function(x) mean(x, na.rm = TRUE)), data$Age)
View(data)
data$Salary = ifelse(is.na(data$Salary),ave(data$Salary, FUN = function(x) mean(x, na.rm = TRUE)), data$Salary)
